{"version":3,"file":"static/js/840.6f7c86ef.chunk.js","mappings":"iKAIe,SAASA,IAOtB,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,CAL/C,CAAEC,GAAI,EAAGC,KAAM,MACf,CAAED,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,WAKXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAaA,CAACC,EAAQC,KAC1B,IAAIC,EAAO,IAAIV,GACfU,EAAKC,OAAOF,EAAM,GAElBG,QAAQC,IAAIH,GACZT,EAAgB,IAAIS,GAAM,EAkC5B,OACEI,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACAF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,iBAAgBD,UAC7BE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,GAAED,SAAA,EAEjBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,iCAAgCD,SAAA,EAC/CF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBAEJF,EAAAA,EAAAA,KAAA,UAAQK,QApBUC,KACpB,IAAIC,EAAM,CACRlB,GAAKH,EAAasB,OAAS,EAC3BlB,KAAI,OAAAmB,OAAUvB,EAAasB,OAAS,IAGlCZ,EAAO,IAAIV,GACfU,EAAKc,KAAKH,GAEVpB,EAAgB,IAAIS,GAAM,EAWSO,UAAU,kBAAiBD,SAAC,gBAIzDhB,EAAasB,OAAS,IAAIJ,EAAAA,EAAAA,MAAA,SAAOD,UAAU,2BAA0BD,SAAA,EACrEF,EAAAA,EAAAA,KAAA,SAAAE,UACEE,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIW,MAAM,MAAKT,SAAC,QAChBF,EAAAA,EAAAA,KAAA,MAAIW,MAAM,MAAKT,SAAC,UAChBF,EAAAA,EAAAA,KAAA,MAAIW,MAAM,MAAKT,SAAC,kBAKpBF,EAAAA,EAAAA,KAAA,SAAAE,SACGhB,EAAa0B,KAAI,CAACC,EAAIlB,KACrBS,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIK,QAAUA,IAxDCS,EAACpB,EAAQC,KACpC,MAAMoB,EAAc,CAAEzB,KAAMI,EAAQJ,KAAMD,GAAIK,EAAQL,IAGtDE,EAAS,CACPyB,SAAS,GAADP,OAAKf,EAAQL,IACrB4B,OAAO,IAADR,QAAMS,EAAAA,EAAAA,IAAmBH,GAAaI,aAC5C,EAiD8BL,CAAqBD,GAAaF,MAAM,MAAKT,SAAEP,EAAQ,KAC3EK,EAAAA,EAAAA,KAAA,MAAAE,SAAKW,EAAGvB,QACRc,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACAF,EAAAA,EAAAA,KAAA,UAAQK,QAAUA,IAAMZ,IAAgBU,UAAU,uBAAsBD,SAAC,WAEzEF,EAAAA,EAAAA,KAAA,UAAQK,QAAUA,IAAMZ,EAAWoB,EAAIlB,GAASQ,UAAU,iBAAgBD,SAAC,iBANpEP,UAadT,EAAasB,QAAU,IAAKR,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKD,SAAC,uBAUlDE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,OAAMD,SAAA,EACnBF,EAAAA,EAAAA,KAACoB,EAAAA,GAAI,CAACC,GAAI,mBAAoBlB,UAAU,OAAMD,SAAC,sBAG/CF,EAAAA,EAAAA,KAACoB,EAAAA,GAAI,CAACC,GAAI,cAAcnB,SAAC,qBAE3BF,EAAAA,EAAAA,KAACsB,EAAAA,GAAM,UAKf,C","sources":["components/modules/Product.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link,createSearchParams,  Outlet, useNavigate } from \"react-router-dom\";\r\n\r\n\r\nexport default function Product() {\r\n  let ProductsListData = [\r\n    { id: 1, name: \"LG\" },\r\n    { id: 2, name: \"Sony\" },\r\n    { id: 3, name: \"Boash\" },\r\n  ];\r\n\r\n  const [ProductsList, setProductsList] = useState([...ProductsListData]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const deleteById = (product,index) => {\r\n    let data = [...ProductsList];\r\n    data.splice(index,1)\r\n\r\n    console.log(data)\r\n    setProductsList([...data])\r\n  }\r\n\r\n  const navigateToDetailPage = (product,index) => {\r\n    const queryParams = { name: product.name, id: product.id };\r\n\r\n   //relative path\r\n    navigate({\r\n      pathname: `${product.id}`,\r\n      search: `?${createSearchParams(queryParams).toString()}`,\r\n    });\r\n\r\n   // navigate(`${product.id}`);  //without params\r\n\r\n\r\n    //absolute path\r\n    // navigate({\r\n    //   pathname: `/product/${product.id}`,\r\n    //   search: `?${createSearchParams(queryParams).toString()}`,\r\n    // });\r\n  }\r\n\r\n  const addNewProduct = () => {\r\n    let obj = {\r\n      id : ProductsList.length + 1,\r\n      name : `abc ${ProductsList.length + 1}`\r\n    };\r\n\r\n    let data = [...ProductsList];\r\n    data.push(obj)\r\n    \r\n    setProductsList([...data])\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div className=\"container my-3\">\r\n      <div className=\"\">\r\n\r\n      <div className=\"d-flex justify-content-between\">\r\n      <h2>Product List</h2>\r\n\r\n      <button onClick={addNewProduct}  className=\"btn btn-primary\">Add New </button>\r\n      </div>\r\n \r\n\r\n        { ProductsList.length > 0 &&<table className=\"table table-striped mt-5\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Id</th>\r\n              <th scope=\"col\">Name</th>\r\n              <th scope=\"col\">\r\n                Actions\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {ProductsList.map((el, index) => (\r\n              <tr key={index}>\r\n                <th onClick= {() => navigateToDetailPage(el,index )}  scope=\"row\">{index + 1}</th>\r\n                <td>{el.name}</td>\r\n                <td>\r\n                <button onClick= {() => deleteById(el)} className=\"btn btn-primary mx-2\">Edit </button>\r\n\r\n                <button onClick= {() => deleteById(el, index )} className=\"btn btn-danger\">Delete </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>}\r\n\r\n        {ProductsList.length <= 0 && <div className=\"m-4\">\r\n          No Data Available\r\n        </div>}\r\n\r\n        {/* {Products.map((el, index) => (\r\n          <div key={el.id}>\r\n          <p>{el.id} - {el.name}</p>\r\n          </div>\r\n        ))} */}\r\n\r\n        <nav className=\"my-3\">\r\n          <Link to={\"featured-product\"} className=\"mx-2\">\r\n            Featured Product\r\n          </Link>\r\n          <Link to={\"new-product\"}> New Product</Link>\r\n        </nav>\r\n        <Outlet />\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":["Product","ProductsList","setProductsList","useState","id","name","navigate","useNavigate","deleteById","product","index","data","splice","console","log","_jsx","_Fragment","children","className","_jsxs","onClick","addNewProduct","obj","length","concat","push","scope","map","el","navigateToDetailPage","queryParams","pathname","search","createSearchParams","toString","Link","to","Outlet"],"sourceRoot":""}